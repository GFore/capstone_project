{"version":3,"sources":["LogInForm.js","Login.js","AvatarDropdown.js","RegisterForm.js","Register.js","Clock.js","LevelsDropdown.js","CategoryDropdown.js","Logout.js","Navbar.js","Timer.js","AnswerForm.js","UserAnswer.js","Question.js","DisplayQuiz.js","MyAccount.js","UpdateUser.js","UpdatePassword.js","UpdateAvatar.js","Settings.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LogInForm","props","react_default","a","createElement","className","name","method","action","onSubmit","event","submit","required","type","onChange","e","newUserName","target","value","inputUserName","id","newPassword","inputPassword","classname","Link","to","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_userName","input","setState","username","_password","password","_onSubmit","preventDefault","Axios","post","state","then","response","data","alert","document","getElementById","history","push","theUser","isLoggedIn","Boolean","_this2","fetch","r","json","console","log","user","src_LogInForm","Component","AvatarDropdown","firstOption","avatarSelection","theAvatarList","avatarData","map","eachAvatar","index","key","img","handleAvatar","RegisterForm","newName","inputName","src_AvatarDropdown","avatarId","Register","_name","match","_handleAvatar","selectedImg","forEach","compare","avatar","src_RegisterForm","inputAvatar","Clock","date","time","intervalID","setInterval","tick","clearInterval","hrs","Date","getHours","mins","getMinutes","secs","getSeconds","toLocaleDateString","LevelsDropdown","levelList","levelSelection","theListOfLevel","eachLevel","categoryId","id_category","includes","level","theEachLevel","handleLevel","concat","showButton","getButtonQuestions","CategoryDropdown","categorySelection","theCategoryList","categoryList","eachCategory","category_type","handleChange","showLevel","src_LevelsDropdown","handleLevelSelect","getLevelDropdown","Logout","href","onClick","logout","Navbar","src_Logout","handleLogout","thisUser","userInfo","inSession","Timer","_handleSelect","selectedCategory","categories","filter","c","_handleLevelSelect","_handleLogout","message","levelId","currentUser","src_Navbar","src_Clock","src_CategoryDropdown","_userInfo","AnswerForm","handleSubmit","userInput","placeholder","userAnswer","resultset_id","questionId","click","UserAnswer","_submit","questionAnswer","correct","id_question","id_resultset","_handleInputAnswer","_isCorrect","src_AnswerForm","questionResult","answerResult","Question","showQuestion","displayQuestion","src_UserAnswer","alreadyAnswered","DisplayQuiz","_handleClick","componentDidMount","_howManyQuestions","length","window","location","reload","isLogged","question","params","listOfQuestions","listOfAnswers","listOfQuestionId","array","i","j","Math","floor","random","temp","shuffleQuestion","answer","theQuestionId","theQuestion","src_Question","all","MyAccount","pathname","UpdateUser","inputUsername","newUsername","UpdatePassword","passwordSubmit","UpdateAvatar","avatarSubmit","Settings","_updateName","_updateUsername","_updatePassword","_updateAvatar","userId","_avatarSubmit","_pwSubmit","src_UpdateUser","src_UpdatePassword","src_UpdateAvatar","newAvatar","Home","BrowserRouter","Route","path","exact","component","App","src_Home","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcad8ec1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst LogInForm = (props) => {\n    return (\n        <form \n            className='login-form' \n            name='login-form'\n            method=\"POST\"\n            action='/api/user/login/'\n\n            onSubmit = {(event) => {\n                props.submit(event)\n            }}\n        >\n            <label>Username:\n            <input \n                required\n                name='username'\n                className='input'\n                type='text'\n                // placeholder='UserName'\n                onChange = {(e) => {\n                    props.newUserName(e.target.value);\n                }}\n                value = {props.inputUserName}\n                id=\"resetUsername\"\n            /></label>\n            <br />\n            <label>Password:\n            <input \n                required\n                name='password'\n                className='input'\n                type='text'\n                // placeholder='Password'\n                onChange = {(e) => {\n                    props.newPassword(e.target.value);\n                }}\n                value = {props.inputPassword}\n                id=\"resetPassword\"\n            /></label>\n            <br />\n            <input \n                className='input-submit'\n                type='submit'\n                value='Login'\n            />\n            <br />\n            <div classname='btn-group'>\n                <Link to = '/register'>\n                    <button \n                        className='btn' \n                        type='submit' \n                        value='submit'\n\n                        >Register\n                    </button>\n                </Link>\n                <Link to = '/#'>   \n                    <button \n                        className='btn' \n                        type='submit' \n                        value='submit'\n\n                        >Sign in as Guest\n                    </button>\n                </Link> \n            </div>\n        </form>\n    )\n}\n\nexport default LogInForm;","import React, { Component } from 'react';\nimport LogInForm from './LogInForm';\nimport Axios from 'axios';\n\n\nclass Login extends Component {\n    constructor (props) {\n        super (props); \n        this.state = {\n            theUser: [],\n            isLoggedIn: Boolean,\n            username: '',\n            password: ''\n\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data =>{\n            console.log(data);\n            console.log(`LOGIN-STATUS:`,data.isLoggedIn)\n            if(data.isLoggedIn === false){\n                this.props.history.push('/');\n            }else{\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n                this.props.history.push('/timer');\n            }\n        })\n        \n    }\n\n    render() {\n        // console.log(this.state.isLoggedIn)\n        return (\n            <section className='section-login'>\n                <div className='title'>\n                    <h2>Login</h2> \n                </div>\n                <LogInForm \n                    inputUserName = {this.state.username}\n                    newUserName = {this._userName}\n                    inputPassword = {this.state.password}\n                    newPassword = {this._password}\n                    submit = {this._onSubmit}\n                />\n            </section>\n        )\n    }\n\n    _userName = (input) => {\n        this.setState ({\n            username: input\n        });\n    }\n    \n    _password = (input) => {\n        this.setState ({\n            password: input\n        });\n    }\n\n    _onSubmit = (event) =>{\n        event.preventDefault();\n        \n        Axios\n        .post(`/api/user/login`, this.state)\n        .then((response) => {\n            //console.log(response)\n            if ((response.data === \"Invalid Username\") || (response.data === \"Invalid Password\")) {\n                alert('Incorrect Username or Password. Please re-enter correct Username or Password');\n                document.getElementById('resetUsername').value=\"\";\n                document.getElementById('resetPassword').value=\"\";\n            } else {\n                this.props.history.push('/timer'); \n            }\n        })\n    }\n}\n\nexport default Login;","import React from 'react';\n\nconst AvatarDropdown = (props) =>{\n    // console.log(props)\n\n    const firstOption = (props.name === 'Avatar')\n    ? <option >Select a Avatar</option>\n    : <option value= {props.avatarSelection}>Something messed up is you see this</option>; \n\n    const theAvatarList = props.avatarData.map((eachAvatar, index) => {\n        // console.log(eachAvatar.img)\n        return <option key={index} value={(eachAvatar.img)}>{eachAvatar.name}</option>\n        // return <img>{eachAvatar.img}</img>\n\n        // Have tried img tag inside option - doesn't like\n    }) \n    \n    // return(\n    //     <div>\n    //         {props.name}\n    //         <select\n    //             name={props.name}\n    //             value={props.avatarSelection}\n    //             onChange={(event) => props.handleAvatar(event)}\n    //             >\n    //             {firstOption}\n    //             {theAvatarList}\n    //             {/* img tag - select tag can not accept img tag */}\n    //        </select>\n    //     </div>\n    // )\n    \n    return(\n        <label>\n            {props.name}\n            <select\n                name={props.name}\n                value={props.avatarSelection}\n                onChange={(event) => props.handleAvatar(event)}\n                >\n                {firstOption}\n                {theAvatarList}\n            </select>\n        </label>\n    )\n\n}\n\nexport default AvatarDropdown;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AvatarDropdown from './AvatarDropdown';\n\n\nconst RegisterForm = (props) => {\n    return (\n        <form \n            className='register-form' \n            method='POST'\n            action='/api/user/register/'\n            onSubmit = {(event) => {\n                props.submit(event)\n            }}\n        >\n            <label>Name:\n            <input \n                required\n                className='input'\n                type='text'\n                // placeholder='name'\n                name='name'\n                onChange = {(e) =>{\n                    props.newName(e.target.value);\n                }}\n                value = {props.inputName}\n                id = \"resetRegisterName\"\n            /></label>\n            <br />\n            <label>UserName:\n            <input \n                required\n                className='input'\n                type='text'\n                // placeholder='UserName'\n                onChange = {(e) => {\n                    // console.log(e.target.value);\n                    props.newUserName(e.target.value);\n                }}\n                value = {props.inputUserName}\n                id = \"resetRegisterUsername\"\n            /></label>\n            <br />\n            <label>Password:\n            <input\n                required\n                className='input'\n                type='text'\n                // placeholder='Password'\n                onChange = {(e) => {\n                    props.newPassword(e.target.value);\n                }}\n                value = {props.inputPassword}\n                id = 'resetRegisterPassword'\n            /></label>\n            <br />\n            <AvatarDropdown\n                    name = 'Avatar'\n                    avatarData = {props.avatarData}\n                    avatarSelection = {props.avatarSelection}\n                    avatarId ={props.avatarId}\n                    handleAvatar = {props.handleAvatar}\n                />\n            {/* <label>Avatar:\n            <input \n                required\n                className='input'\n                type='text'\n                // placeholder='Select an Avatar'\n                onChange = {(e) => {\n                    props.newAvatar(e.target.value);\n                }}\n                value = {props.inputAvatar}\n                id = 'resetRegisterAvatar'\n            /></label> */}\n            <br />\n            <input \n                className='input-submit'\n                type='submit'\n                value='Register'\n            />\n            <br />\n            <Link to = '/'>\n                <button \n                    className='btn' \n                    type='submit' \n                    value='submit'\n                    \n                    >Log In\n                </button>\n            </Link>    \n            <Link to = '/#'>\n                <button \n                    className='btn' \n                    type='submit' \n                    value='submit'\n                    \n                    >Sign in as Guest\n                </button>\n            </Link>        \n        </form>\n    )\n}\n\nexport default RegisterForm;","import React, { Component } from 'react';\nimport RegisterForm from './RegisterForm';\nimport Axios from 'axios';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theUser: [],\n            isLoggedIn: Boolean,\n            name: '',\n            username: '',\n            password: '',\n            avatar: '',\n            avatarData: [],\n            avatarSelection: 'Select',\n            avatarId: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data =>{\n            console.log(`LOGIN-STATUS:`,data.isLoggedIn)\n            if(data.isLoggedIn === true){\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n                this.props.history.push('/timer');\n            }\n            // else{\n            //     fetch('/api/user')\n            //     .then(r => r.json())\n            //     .then(data =>{\n            //         this.setState({\n            //             theUser: data\n            //         })\n            //     })\n            // }\n        })\n        .then(\n            fetch('/api/avatar')\n            .then(r => r.json())\n            .then(data =>{\n                // console.log(data)\n                this.setState({\n                    avatarData: data\n                })\n            })\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Register</h2>\n                <RegisterForm \n                    inputName = {this.state.name}\n                    newName = {this._name}\n                    inputUserName = {this.state.username}\n                    newUserName = {this._userName}\n                    inputPassword = {this.state.password}\n                    newPassword = {this._password}\n                    inputAvatar = {this.state.avatar}\n                    submit = {this._onSubmit}\n\n                    name = 'Avatar'\n                    avatarData = {this.state.avatarData}\n                    avatarSelection = {this.state.avatarSelection}\n                    avatarId = {this.state.avatarId}\n                    handleAvatar = {this._handleAvatar}\n                />\n            </div>\n        )\n    }\n\n    _name = (input) => {\n        const letters = /[a-z,A-Z]/; \n\n        // if (input !== '') {\n        //     if (input.match(letters)) {\n        //         this.setState ({\n        //             name: input\n        //         })\n        //     }\n        // } else {\n        //     document.getElementById('resetRegisterName').value=\"\";\n        //     alert('Please input alphabet characters only');\n        // }\n\n        if (input.match(letters)) {\n            this.setState ({\n                name: input\n            })\n        } else {\n            document.getElementById('resetRegisterName').value=\"\";\n            alert('Please input alphabet characters only');\n        }\n\n        // this.setState ({\n        //     name: input\n        // })\n    }\n\n    _userName = (input) => {\n        const letters = /[0-9,a-z,A-Z]/; \n        // console.log(input)\n        // console.log(this.state.theUser)\n        \n\n\n        if (input.match(letters)) {\n            this.setState ({\n                username: input\n            }) \n        } else {\n            alert('Please input alphanumeric characters only');\n            document.getElementById('resetRegisterUsername').value=\"\";\n        }\n\n        // this.setState ({\n        //     username: input\n        // })\n    }\n\n    _password = (input) => {\n        this.setState ({\n            password: input\n        });\n    }\n\n    // _avatar = (input) => {\n    //     this.setState ({\n    //         avatar: input\n    //     });\n    // }\n    \n    _onSubmit = (event) => {\n        event.preventDefault();\n        // console.log('Registering..')\n        console.log(this.state)\n        Axios\n        .post('/api/user/register', this.state)\n        .then((response) =>{\n            // console.log(response.data)\n\n\n            if (response.data === \"Username exist\") {\n                alert('Username already exist. Please choose another username');\n                document.getElementById('resetRegisterName').value=\"\";\n                document.getElementById('resetRegisterUsername').value=\"\";\n                document.getElementById('resetRegisterPassword').value=\"\";\n                document.getElementById('resetRegisterAvatar').value=\"\";\n            }else{\n                this.props.history.push('/timer');\n            }\n        })\n    };\n\n    _handleAvatar = (event) =>{\n        event.preventDefault()\n        const selectedImg = event.target.value\n        // console.log(this.state.avatarData)\n\n        this.state.avatarData.forEach((compare) =>{\n            if (selectedImg === compare.img){\n                this.setState({\n                    avatar: selectedImg,\n                    avatarSelection: selectedImg,\n                    avatarId: compare.id\n                })\n            }\n        })\n    }\n\n\n\n\n\n}\n\nexport default Register;\n\n\n","import React, { Component } from 'react';\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: '',\n            time: ''\n        };\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(\n            () => {this.tick()}, 1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        let hrs = new Date().getHours();\n        let mins = new Date().getMinutes();\n        let secs = new Date().getSeconds();\n\n        hrs = (hrs < 10) ? (\"0\" + hrs) : hrs;\n        mins = (mins < 10) ? (\"0\" + mins) : mins;\n        secs = (secs < 10) ? (\"0\" + secs) :secs;\n\n        let time = hrs + `:` + mins + `:` + secs;\n\n        // new Date().toLocaleTimeString() for 12 hour format\n        this.setState({\n            date: new Date().toLocaleDateString(),\n            time: time\n        });\n    }\n\n    render() {\n        // console.log(this.state.date)\n        return (\n        <div className=\"App-clock\">\n            {this.state.time}\n        </div>\n        );\n    }\n\n} \n\nexport default Clock;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LevelsDropdown = (props) => {\n    const firstOption = (props.name !== 'Level')\n    ? <option value= {props.levelList}>Select a Level</option>\n    : <option value= {props.levelSelection}>WRONG</option>;\n    // console.log(props.levelList)\n\n    let getButtonQuestions = () => {\n        if (props.showButton) { \n            return (\n                <div>\n                    <button>Click to continue!</button>\n                </div>\n            )\n        }\n    }\n\n    const theListOfLevel = [];\n    props.levelList.forEach((eachLevel) =>{\n        if((props.categoryId === eachLevel.id_category) && (!theListOfLevel.includes(eachLevel.level))){\n            theListOfLevel.push(eachLevel.level)\n        }\n    })\n\n    const theEachLevel = theListOfLevel.map((eachLevel, index) =>{\n        return <option key={index} value={eachLevel}>{eachLevel}</option>\n    })\n\n    return (\n        <div>\n            <label>{props.name}:\n                <select\n                    value={props.levelSelection}\n                    onChange={(event) => props.handleLevel(event)}\n                >\n                    {firstOption}  \n                    {theEachLevel}\n                </select>\n            </label>\n            <Link to = {`/question/${props.categoryId}/${props.levelSelection}`}>{getButtonQuestions()}</Link>\n\n        </div>\n    )\n}\nexport default LevelsDropdown;","import React from 'react';\nimport LevelsDropdown from './LevelsDropdown';\n\nconst CategoryDropdown = (props) => {\n\n    const firstOption = (props.name === 'Category')\n    ? <option >Select a Category</option>\n    : <option value= {props.categorySelection}>Something messed up is you see this</option>; \n   \n    // console.log(props.showLevel)\n    \n    let getLevelDropdown = () => {\n        if (props.showLevel === true){\n            return(\n                <div>   \n                    <LevelsDropdown \n                        name = 'Levels'\n                        levelList = {props.levelList}\n                        handleLevel= {props.handleLevelSelect}\n                        levelSelection = {props.levelSelection}\n                        categoryId = {props.categoryId}\n                        categorySelection = {props.categorySelection}\n\n                        showButton = {props.showButton}\n                        // handleButton  = {props.handleButtonClick}\n                    />\n                </div>\n            )\n        }\n    }\n\n    const theCategoryList = props.categoryList.map((eachCategory,index) => {\n        return <option key={index} value={(eachCategory.category_type)}>{eachCategory.category_type}</option>\n    }) \n\n    return (\n        <div>\n            <label>{props.name}: \n                <select\n                    name={props.name}\n                    value={props.categorySelection}\n                    onChange={(event) => props.handleChange(event)}\n                >\n\n                    {firstOption}\n                    {theCategoryList}\n                \n                </select>\n            </label>\n            {getLevelDropdown()}\n        </div>\n    )\n\n    \n}\n\n\nexport default CategoryDropdown;","import React from 'react';\n\n\nconst Logout = (props) =>{\n    // console.log(props.inSession)\n\n    return(\n        <a href='/' onClick={(event) =>{props.logout(event)}}>Logout</a>\n    )\n}\n\nexport default Logout;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logout from './Logout';\n\n\nconst Navbar = (props) => {\n    // console.log(props)\n    // const thisUser = (props.user)\n    // const logout = (props.handleLogout)\n    // const inSession = (props.inSession)\n    // console.log(thisUser)\n    return(\n        <header className='navbar'>\n            <Link to = '/myaccount' className='links'>MyAccount</Link> \n            <br />\n\n            {/* <Link to = {{\n                pathname: '/',\n                state: {\n                    thisUser,\n                    logout,\n                    inSession\n                }\n            }}\n                className='links'\n                onClick={(event) =>{logout(event)}}\n                \n            >Logout</Link>  */}\n             <Logout \n                 logout = {props.handleLogout}\n                 thisUser = {props.userInfo}\n                 inSession = {props.inSession}\n            />\n        </header>\n    );\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport Clock from './Clock';\nimport CategoryDropdown from './CategoryDropdown';\nimport Navbar from './Navbar';\n\n\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            theUser: [],\n            isLoggedIn: Boolean,\n            categories: [],\n            level: [],\n            categorySelection: 'Select',\n            levelSelection: 'Select',\n            categoryId: '',\n            levelId: '',\n            showLevel: false,\n            showButton: false\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data =>{\n            // console.log(data.user.id)\n            if(data.isLoggedIn === false){\n                this.props.history.push('/');\n            } else {\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n            }\n            fetch(`/api/categories/${data.user.id}`)\n            .then(r => r.json())\n            .then(data => { \n                // console.log(data);\n                this.setState({\n                    categories: data\n                })\n                fetch(`/api/questions/${this.state.theUser.id}`)\n                .then(r => r.json())\n                .then(data => {\n                    // console.log(data)\n                    this.setState({\n                        level: data\n                    })\n                })\n            })\n        })    \n    }\n\n    render() {\n\n        console.log(this.state.theUser.avatar)\n        // console.log(this.state.theUser)\n        const currentUser = (this.state.theUser)\n        console.log(currentUser)\n        console.log(`LOGIN-STATUS:`,this.state.isLoggedIn)\n        return (\n            <div>\n                <Navbar \n                    user = {currentUser}\n                    \n                    inSession = {this.state.isLoggedIn}\n                    handleLogout = {this._handleLogout}\n                />\n                <Clock />\n\n                <CategoryDropdown \n                    name = 'Category'\n                    categoryList = {this.state.categories}\n                    handleChange= {this._handleSelect}\n                    categorySelection = {this.state.categorySelection}\n                    categoryId = {this.state.categoryId}\n                    \n                    levelList = {this.state.level}\n                    handleLevelSelect = {this._handleLevelSelect}\n                    levelSelection = {this.state.levelSelection}\n                    showLevel = {this.state.showLevel}\n\n                    showButton = {this.state.showButton}\n                    // handleButtonClick = {this._handleButton}\n\n                    userInfo = {this._userInfo}\n                    inSession = {this.state.isLoggedIn}\n                />\n\n                    {/* <button>Set Timer</button> */}\n\n            </div>\n        );\n    }\n\n\n    _handleSelect = (event) => {\n        //console.log('Category Selected')\n        let selectedCategory = this.state.categories.filter(c => {\n            return event.target.value === c.category_type})[0];\n                \n        this.setState({\n                    categoryId: selectedCategory.id,\n                    categorySelection: event.target.value,\n                    showLevel: true,\n                    showButton: false\n        })\n    }\n\n    _handleLevelSelect = (event) => {\n        //console.log('Level Selected')\n        this.setState({\n            levelSelection: event.target.value,\n            showButton: true\n        })\n    }\n    \n    _handleLogout = (event) =>{\n        // console.log(\"clicked\")\n    \n        this.setState({\n            inSession: false\n        })  \n        Axios\n        .post('/api/user/logout')\n        .then((response) =>{\n            if (response.data.message === \"Successfully logged out\"){\n                this.props.history.push('/')\n            }\n        })\n    }\n}\n\nexport default Timer;","import React from 'react';\n\nconst AnswerForm = (props) => {\n    // console.log(props.resultset_id)\n    return (\n        <form className='answer-form'\n                method='POST'\n                //  ${resultset_id} needs to be add in place of '100'\n                action={'/api/result/create'}\n                onSubmit={(event) =>{\n                    event.preventDefault();\n                    props.handleSubmit(props.userInput)\n                }}\n                id='resetAnswer'\n            >\n            <input\n                id='answerInput'\n                required\n                className='input'\n                type='text'\n                placeholder='What is your answer?'\n                onChange={(event) =>{\n                    props.userAnswer(event.target.value)\n                }}\n                value={props.userInput}\n            />\n            <input \n                id='id_resultset'\n                name='id_resultset'\n                type='hidden'\n                value={props.resultset_id}\n            />\n            <input \n                id='id_question'\n                name='id_question'\n                type='hidden'\n                value={props.questionId}\n            />\n            \n            <input \n                className='input-submit'\n                type='submit'\n                value='submit'\n                onClick = {props.click}\n            />\n        </form>\n    )\n}\n\n\nexport default AnswerForm;","import React, { Component } from 'react';\nimport AnswerForm from './AnswerForm';\nimport Axios from 'axios';\n\nclass UserAnswer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userInput: '',\n            correct: Boolean,\n            resultset_id: '100'\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data =>{\n            console.log(`LOGIN-STATUS:`,data.isLoggedIn)\n            if(data.isLoggedIn === false){\n                this.props.history.push('/');\n            }else{\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n            }\n        })\n    }\n\n    \n\n    render() {\n        return (\n            <AnswerForm \n                userInput = {this.state.userInput}\n                questionResult = {this.state.correct}\n\n                userAnswer = {this._handleInputAnswer}\n                answerResult = {this._isCorrect}\n                handleSubmit = {this._submit}\n\n                questionId = {this.props.questionId}\n                questionAnswer = {this.props.questionAnswer}\n\n                resultset_id = {this.state.resultset_id}\n                \n                click = {this.props.click}\n            />\n\n        )\n    }\n\n    _submit = (input) => {\n        console.log(input)\n        console.log(this.state.resultset_id)\n        console.log(this.props.questionId)\n     \n        if(this.props.questionAnswer === input){\n            Axios\n            .post('/api/result/create', (\n                {\n                    correct: true,\n                    id_question: this.props.questionId,\n                    id_resultset: this.state.resultset_id\n                })\n            )    \n            .then(response => {\n                console.log(response)\n                document.getElementById('answerInput').value=\"\";\n            })\n        } else {\n            Axios\n            .post('/api/result/create', (\n                {\n                    correct: false,\n                    id_question: this.props.questionId,\n                    id_resultset: this.state.resultset_id\n                })\n            )\n            .then(response => {\n                console.log(response)\n                document.getElementById('answerInput').value=\"\";\n            })\n\n        }\n    }\n\n    _handleInputAnswer = (input) => {\n        this.setState({\n            userInput: input\n        })\n    }\n\n    _isCorrect = (input) => {\n        this.setState({\n            correct: input\n        })\n    }\n\n\n\n}    \n\n    \n\nexport default UserAnswer;","import React from 'react';\nimport UserAnswer from './UserAnswer';\n\n\nconst Question = (props) =>{\n\n    const showQuestion = props.displayQuestion;\n    const questionId = props.questionId;\n    const questionAnswer = props.questionAnswer;\n\n    console.log(`Answer:`, questionAnswer)\n\n    return(\n        <div>\n            {showQuestion}\n            {/* <Answer /> */}\n\n            <UserAnswer \n                questionAnswer = {questionAnswer}\n                questionId = {questionId}\n                alreadyAnswered = {props.alreadyAnswered}\n\n                click = {props.click}\n            />\n        </div>\n    )\n}\n\nexport default Question;","import React, { Component } from 'react';\nimport Clock from './Clock';\nimport Question from './Question';\n\n\nclass DisplayQuiz extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            theUser: [],\n            isLogged: Boolean,\n            question: [],\n            questionId: '',\n            displayQuestion: '',\n            questionAnswer: '',\n            alreadyAnswered: []\n        }\n    }\n\n    componentDidMount(){\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data =>{\n            console.log(data.isLoggedIn)\n            if(data.isLoggedIn === false){\n                this.props.history.push('/');\n            }else{\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n            }\n        })\n        .then(\n            \n        )\n        const categoryId = this.props.match.params.categoryId;\n        const levelSelection = this.props.match.params.levelSelection;\n       \n\n        fetch(`/api/question/${categoryId}/${levelSelection}`)\n        .then(r => r.json())\n        .then((data) =>{\n            // console.log(data)\n            const listOfObjectQuestion = data \n\n            let shuffleQuestion = (array) =>{\n            \n                for (let i = array.length - 1; i > 0; i--) {\n                    let j = Math.floor(Math.random() * (i + 1));\n                    let temp = array[i]; \n                    array[i] = array[j];\n                    array[j] = temp;\n                }\n                return array;\n            }\n\n            const listOfQuestions = [];\n            const listOfAnswers = [];\n            const listOfQuestionId = [];\n\n            shuffleQuestion(listOfObjectQuestion).forEach(data =>{\n                listOfQuestions.push(data.question);\n                listOfAnswers.push(data.answer);\n                listOfQuestionId.push(data.id);\n\n            })\n            const theQuestionId = listOfQuestionId[0];\n            const theQuestion = listOfQuestions[0];\n            const userAnswer = listOfAnswers[0];\n                this.setState({\n                    question: data,\n                    displayQuestion: theQuestion,\n                    questionId: theQuestionId,\n                    questionAnswer: userAnswer\n                })\n            })\n        \n    }\n\n    \n    render() {   \n        return(\n            <div>\n                <Clock />\n                <Question \n                    all = {this.state.question}\n                    displayQuestion = {this.state.displayQuestion}\n                    questionId = {this.state.questionId}\n                    questionAnswer = {this.state.questionAnswer}\n                    alreadyAnswered = {this.state.alreadyAnswered}\n\n                    click = {this._handleClick}\n                />\n                \n            </div>\n        )\n    }\n\n    _handleClick = () => {\n        this.componentDidMount()\n    }\n\n    _howManyQuestions = () => {\n        const refreshPage = () => {\n            window.location.reload();\n        }\n\n        if (this.alreadyAnswered.length <= 6) {\n            this.alreadyAnswered.push(this.questionId)\n            refreshPage()\n            console.log('Keep answering');\n        } else {\n            console.log('No more questions');\n        }\n\n    }\n\n    \n}\n\nexport default DisplayQuiz; ","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass MyAccount extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            theUser: [],\n            isLoggedIn: Boolean\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/user/isValid')\n        .then(r => r.json())\n        .then(data => {\n            // console.log(data.user)\n            if(data.isLoggedIn === false){\n                this.props.history.push('/');\n            }else{\n                this.setState({\n                    theUser: data.user,\n                    isLoggedIn: data.isLoggedIn\n                })\n            }\n        })\n    }\n    \n\n    render() {\n        console.log(this.state.theUser)\n        // console.log(this.state.isLoggedIn)\n        const theUser = (this.state.theUser)\n        const thisUser = theUser.username\n\n        console.log(thisUser)\n\n        return (\n            <div>\n                <h2>MyAccount</h2>\n                <Link to = {{\n                    pathname: '/settings',\n                    state: {\n                        thisUser: theUser\n                        // inputValue\n                    }    \n                }} \n                    className='links'\n                >Settings</Link>\n                <h3>{`${thisUser}'s Results `}</h3>\n                   \n            </div>\n        )\n    }\n\n\n    \n\n}\n\n\nexport default MyAccount;","import React from 'react';\n\nconst UpdateUser = (props) => {\n    return (\n        <form\n            className='update-form'\n            method='POST'\n            action='/api/user/userId'\n            onSubmit = {(event) => {\n                props.submit(event)\n            }}\n        >\n            <label>Name:\n            <input \n                id='updatedName'\n                name='name'\n                className='input'\n                type='text'\n                onChange = {(event) => {\n                    props.inputName(event.target.value)\n                }}\n                value = {props.newName}\n            /></label>\n            <br />\n            <label>Username:\n            <input \n                id='updatedUserName'\n                name='username'\n                className='input'\n                type='text'\n                onChange = {(event) => {\n                    props.inputUsername(event.target.value)\n                }}\n                value = {props.newUsername}\n            /></label>\n            <br />\n            <input \n                className='input-submit'\n                type='submit'\n                value='Change username'\n            />\n        </form>\n    )\n}\n\nexport default UpdateUser;","import React from 'react';\n\nconst UpdatePassword = (props) => {\n    return (\n        <form\n            className='update-form'\n            method='POST'\n            action='/api/user/pwd/userId'\n            onSubmit = {(event) => {\n                props.passwordSubmit(event)\n            }}\n        >\n            <label>Password:\n            <input \n                id='updatedPassword'\n                name='password'\n                className='input'\n                type='text'\n                onChange = {(event) => {\n                    props.inputPassword(event.target.value)\n                }}\n                value = {props.newPassword}\n            /></label>\n            <br />\n            <input \n                className='input-submit'\n                type='submit'\n                value='Update password'\n            />\n        </form>\n    )\n}\n\nexport default UpdatePassword;\n","// import React from 'react';\n\n// const UpdateAvatar = (props) => {\n//     return (\n//         <form\n//             className='update-form'\n//             method='POST'\n//             action='/api/user/userId'\n//             onSubmit = {(event) => {\n//                 props.avatarSubmit(event)\n//             }}\n//         >\n//             <label>Avatar:\n//             <input \n//                 id='updateAvatar'\n//                 name='avatar'\n//                 className='input'\n//                 type='text'\n//                 onChange = {(event) => {\n//                     props.inputAvatar(event.target.value)\n//                 }}\n//                 value = {props.newAvatar}\n//             /></label>\n//             <br />\n//             <input \n//                 className='input-submit'\n//                 type='submit'\n//                 value='Change avatar'\n//             />\n//         </form>\n//     )\n// }\n\n// export default UpdateAvatar;\n\nimport React from 'react';\nimport AvatarDropdown from './AvatarDropdown';\n\nconst UpdateAvatar = (props) => {\n    return (\n        <form\n            className='update-form'\n            method='POST'\n            action='/api/user/userId'\n            onSubmit = {(event) => {\n                props.avatarSubmit(event)\n            }}\n        >\n            \n            <AvatarDropdown\n                name='Avatar'\n                id='updatedAvatar'\n                avatarData = {props.avatarData}\n                avatarSelection = {props.avatarSelection}\n                avatarId ={props.avatarId}\n                handleAvatar = {props.handleAvatar}\n            />\n            {/* <label>Avatar:\n            <input \n                id='updateAvatar'\n                name='avatar'\n                className='input'\n                type='text'\n                onChange = {(event) => {\n                    props.inputAvatar(event.target.value)\n                }}\n                value = {props.newAvatar}\n            /></label> */}\n            <br />\n            <input \n                className='input-submit'\n                type='submit'\n                value='Change avatar'\n            />\n        </form>\n    )\n}\n\nexport default UpdateAvatar;","import React, { Component } from 'react';\nimport UpdateUser from './UpdateUser';\nimport UpdatePassword from './UpdatePassword';\nimport UpdateAvatar from './UpdateAvatar';\nimport Axios from 'axios';\n\n\n\nclass Settings extends Component {\n    constructor(props) {\n        // console.log(props)\n        super(props); \n        this.state = {\n            name: '',\n            username: '',\n            avatar: '',\n            password: '',\n            avatarData: [],\n            avatarSelection: 'Select',\n            avatarId: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/avatar')\n            .then(r => r.json())\n            .then(data =>{\n                // console.log(data)\n                this.setState({\n                    avatarData: data\n                })\n            })\n    }\n    render () {\n        // console.log(this.props.location.state.thisUser)\n        \n        // console.log(theUser.id)\n        return (\n            <div>\n                <h2>Settings</h2>\n                <h4>Change user info</h4>\n                <UpdateUser \n                    inputName = {this._updateName}\n                    newName = {this.state.name}\n                    inputUsername = {this._updateUsername}\n                    newUsername = {this.state.username}\n                    submit = {this._onSubmit}\n                />\n                <h4>Update password</h4>\n                <UpdatePassword \n                    theUser = {this.props.location.state.thisUser}\n                    inputPassword = {this._updatePassword}\n                    newPassword = {this.state.password}\n                    passwordSubmit = {this._pwSubmit}\n                />\n                <h4>Change avatar</h4>\n                <UpdateAvatar \n                    name = 'Avatar'\n                    avatarData = {this.state.avatarData}\n                    avatarSelection = {this.state.avatarSelection}\n                    avatarId = {this.state.avatarId}\n                    handleAvatar = {this._handleAvatar}\n\n                    inputAvatar = {this._updateAvatar}\n                    newAvatar = {this.state.avatar}\n                    avatarSubmit = {this._avatarSubmit}\n                />\n                <h3>Delete account</h3>\n                <p>Please rethink your next action.</p>\n                <button>Delete this account</button>\n            </div>\n        )\n    }\n    \n    _updateName = (input) => {\n        const letters = /[a-z,A-Z]/; \n\n        if (input.match(letters)) {\n            this.setState ({\n                name: input\n            })\n        } else {\n            document.getElementById('updateName').value=\"\";\n            alert('Please input alphabet characters only');\n        }\n    }\n\n    _updateUsername = (input) => {\n        const letters = /[0-9,a-z,A-Z]/;\n\n        if (input.match(letters)) {\n            this.setState ({\n                username: input\n            }) \n        } else {\n            alert('Please input alphanumeric characters only');\n            document.getElementById('updatedUserName').value=\"\";\n        }\n    }\n\n    _updatePassword = (input) => {\n        this.setState ({\n            password: input\n        });\n    }\n\n    _updateAvatar = (input) => {\n        this.setState ({\n            avatar: input\n        });\n    }\n\n    _handleAvatar = (event) =>{\n        event.preventDefault()\n        const selectedImg = event.target.value\n        // console.log(this.state.avatarData)\n\n        this.state.avatarData.forEach((compare) =>{\n            if (selectedImg === compare.img){\n                this.setState({\n                    avatar: selectedImg,\n                    avatarSelection: selectedImg,\n                    avatarId: compare.id\n                })\n            }\n        })\n    }\n\n    _onSubmit = (event) => {\n        event.preventDefault();\n        const theUser = (this.props.location.state.thisUser);\n        const userId = theUser.id;\n\n        Axios\n        .post(`/api/user/${userId}`,this.state)\n        .then((response) => {\n            // console.log(response)\n            // if ((response.data.updated === true) && ((response.data.name === 'Name Updated') || (response.data.username === 'Username Updated') ) ) {\n            if ((response.data.name === 'Name Updated') || (response.data.username === 'Username Updated'))  {\n\n                alert('User info updated')\n                document.getElementById('updatedName').value=\"\";\n                document.getElementById('updatedUserName').value=\"\";\n            }\n        })\n    }\n\n    _avatarSubmit = (event) => {\n        event.preventDefault();\n        const theUser = (this.props.location.state.thisUser);\n        const userId = theUser.id;\n\n        Axios\n        .post(`/api/user/${userId}`,this.state)\n        .then((response) => {\n            // console.log(response)\n            if (response.data.avatar === \"Avatar Updated\") {\n                alert('Avatar updated')\n                document.getElementById('updatedAvatar').value=\"Select a Avatar\";\n            }\n        })\n    }\n\n    _pwSubmit = (event) => {\n        event.preventDefault()\n        const theUser = (this.props.location.state.thisUser);\n        const userId = theUser.id;\n        const newPassword = this.state.password;\n\n        Axios\n        .post(`/api/user/pwd/${userId}`, {password: newPassword})\n        .then((response) => {\n            if (response.data === true) {\n                alert('Password updated')\n                document.getElementById('updatedPassword').value=\"\";\n            }\n        })\n    }\n\n    // _delete = (event) => {\n    //     const theUser = (this.props.location.state.thisUser)\n    //     const userId = theUser.id\n    //     Axios \n    //     .post(`/api/user/${userId}`, this.state)\n    //     .then((response) => {\n\n    //     })\n    // }\n}\n\nexport default Settings;","import React, { Component } from 'react'; \nimport {\n    BrowserRouter as Router, \n    Route, \n}   from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\nimport Timer from './Timer';\nimport DisplayQuiz from './DisplayQuiz';\nimport MyAccount from './MyAccount';\nimport Settings from './Settings';\nimport UpdateUser from './UpdateUser';\nimport UpdatePassword from './UpdatePassword';\nimport UpdateAvatar from './UpdateAvatar';\n\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <Router>\n                <div className='main'>\n                    <h1>Clock Signal</h1>\n                    <Route path =  '/' exact component = {Login} /> \n                    <Route path = '/register' component = {Register} />\n                    <Route path = '/timer' component = {Timer} />\n                    <Route path = '/question/:categoryId/:levelSelection' component = {DisplayQuiz} />\n\n                    <Route path = '/myaccount' component = {MyAccount} />\n                    <Route path = '/settings' component = {Settings} />\n                    <Route path = '/updateUser' component = {UpdateUser} />\n                    <Route path = '/updatePassword' component = {UpdatePassword} />\n                    <Route path = '/updateAvatar' component = {UpdateAvatar} />\n                    \n                </div>\n            </Router>\n        );\n    }\n    \n}\n\n\nexport default Home;","import React, { Component } from 'react';\nimport Home from './Home';\nimport './App.css';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Home />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}